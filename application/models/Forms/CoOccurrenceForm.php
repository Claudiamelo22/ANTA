<?php/** * @package Ui_Forms *//** *  */ class Application_Model_Forms_CoOccurrenceForm extends Application_Model_Forms_SimpleForm{	protected function _init(){	        $fieldA = new Application_Model_Forms_Elements_TextArea( I18n_Json::get( "list of word A" ), array(			"name"  => "field-a",			"id"    => "field-a",			"class" => "width_7 margin_1 height_4"		));				$fieldB = new Application_Model_Forms_Elements_TextArea( I18n_Json::get( "list of word B" ), array(			"name"  => "field-b",			"id"    => "field-b",			"class" => "width_7 margin_1 height_4"		));				$maxDistance = new Application_Model_Forms_Elements_Select( I18n_Json::get( "use sentences nearer than" ), array(			"name"  => "max-distance",			"id"    => "max-distance",			"class" => "margin_1",		));				$maxDistance->addOptions( array(			new Application_Model_Forms_Elements_Option( "0", 0 ), 			new Application_Model_Forms_Elements_Option( "1", 1 ),			new Application_Model_Forms_Elements_Option( "2", 2 ), 			new Application_Model_Forms_Elements_Option( "3", 3 ),		));								$useStemming = new Application_Model_Forms_Elements_Input( "checkbox", I18n_Json::get( "use stemmed version of words" ), array(			"name"  => "use-stemming",			"id"    => "use-stemming",			"value" => "use-stemming",			"class" => "margin_1",		));				$submit = new Application_Model_Forms_Elements_Input( "submit", $this->title, array(			"name"  => "send-fields",			"id"    => "send-fields",						"value" => I18n_Json::get( "computate co-occurrences" )		));				$export = new Application_Model_Forms_Elements_Input( "image", $this->title, array(			"name"  => "export-fields[image]",			"id"    => "export-fields",			"src"	=> Anta_Core::getbase()."/images/download.csv.png",			"title" => "save search results as csv file",			"value" => I18n_Json::get( "export to csv" )		));				$this->content = "";				/** add created element */		$this->addElement( $fieldA );		$this->addElement( $fieldB );		$this->addElement( $maxDistance );		$this->addElement( $useStemming );		$this->addElement( $submit );		$this->addElement( $export );		    }		public function __toString(){		$this->content = '		<div class="grid_24 alpha omega">			<div class="grid_12 alpha margin_1">				<p>'.$this->field_a->label.'</p>				'.$this->field_a.'				&nbsp; <input type="hidden" name="form-action" value="'.$this->id.'"/>			</div>			<div class="grid_12 omega margin_1">				<p>'.$this->field_b->label.'</p>				'.$this->field_b.'			</div>		</div>		<div class="grid_24 alpha omega">						<div class="grid_4 alpha margin_1">				<p style="height:30px">'.$this->max_distance->label.'</p>				'.$this->max_distance.'			</div>			<div class="grid_4 margin_1">				<p style="height:30px">'.$this->use_stemming->label.'</p>				'.$this->use_stemming.'			</div>			<div class="grid_8 prefix_2 omega margin_1">				<p>'.$this->send_fields.' '.$this->export_fields.'</p>			</div>					</div>		';		return parent::__toString();	}}