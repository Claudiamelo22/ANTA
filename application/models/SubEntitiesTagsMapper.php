<?php/** * @package Application_Model *//** * anta user.*_entities table api. Return and match generic subEntities instances */class Application_Model_SubEntitiesTagsMapper{		/**	 * return a list of tags for the given prefix 	 */	public static function getTableTags( Application_Model_User $antaUser, $prefix, $ignore = -1 ){		$query = "			SELECT 				t.id_tag, t.content as content, t.parent_id_tag as pid,				c.content as category, 				count( e.id_{$prefix}_entity ) as distro			FROM 			anta_{$antaUser->username}.`tags` t, 			anta_{$antaUser->username}.{$prefix}_entities_tags et,			anta_{$antaUser->username}.{$prefix}_entities e,			anta_{$antaUser->username}.categories c 						WHERE 						et.id_{$prefix}_entity = e.id_{$prefix}_entity AND			t.id_tag = et.id_tag AND			".($ignore != -1? "`ignore` = {$ignore} AND":"")."			c.id_category = t.id_category			GROUP BY id_tag			ORDER BY content ASC			"				;				$stmt = Anta_Core::mysqli()->query( $query);				$results = array();				while(	$row = $stmt->fetchObject() ){			$tag = new Application_Model_Tag( $row->id_tag, $row->content, $row->category, $row->pid );			$tag->distro = $row->distro;			$results[] = $tag;		}				return $results;	}		public static function getEntityTags(  Application_Model_User $antaUser, $prefix, $idEntity ){				$stmt = Anta_Core::mysqli()->query( "			SELECT			  t.id_tag, t.content as content, c.content as category, t.parent_id_tag as pid			FROM anta_{$antaUser->username}.`tags` t INNER JOIN anta_{$antaUser->username}.{$prefix}_entities_tags USING (id_tag),			anta_{$antaUser->username}.categories c  WHERE id_{$prefix}_entity = ? AND c.id_category = t.id_category", array( $idEntity )		);				$results = array();				while(	$row = $stmt->fetchObject() ){			$results[] = new Application_Model_Tag( $row->id_tag, $row->content, $row->category, $row->pid );		}				return $results;	}		public static function removeEntityTag(  Application_Model_User $antaUser, $prefix, $idEntity, $idTag ){		$stmt = Anta_Core::mysqli()->query( "			DELETE FROM anta_{$antaUser->username}.{$prefix}_entities_tags WHERE id_{$prefix}_entity = ? AND id_tag = ?		", array( $idEntity, $idTag )		);				return $stmt->rowCount();	}		public static function addEntityTag(  Application_Model_User $antaUser, $prefix, $idEntity, $idTag ){		$stmt = Anta_Core::mysqli()->query( "			INSERT IGNORE INTO anta_{$antaUser->username}.{$prefix}_entities_tags ( id_{$prefix}_entity, id_tag)			VALUES( ?,? )		", array( $idEntity, $idTag )		);				return $stmt->rowCount();	}		}?>