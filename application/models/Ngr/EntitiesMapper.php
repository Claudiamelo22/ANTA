<?phpclass Application_Model_Ngr_EntitiesMapper{		public static function install( $username ){				$stmt = Anta_Core::mysqli()->query(					"CREATE TABLE IF NOT EXISTS anta_".$username.".`ngr_entities` (			  `id_ngr_entity` int(11) NOT NULL AUTO_INCREMENT,			  `sign` varchar(32) NOT NULL COMMENT 'stem version of the first word to easily compare similar entities',			  `content` varchar(200) NOT NULL,			  `pid` int(11) NOT NULL COMMENT 'entity parent id',			  `service` varchar(2) NOT NULL,			  `ignore` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'flag entities to be ignored',			  PRIMARY KEY (`id_ngr_entity`),			  UNIQUE KEY `content` (`content`,`service`),			  KEY `sign` (`sign`),			  KEY `service` (`service`),			  KEY `ignore` (`ignore`)			) ENGINE=InnoDB DEFAULT CHARSET=utf8"		);			}		/**	 * return a list of entities (where id_entity differs )	 * every entity presents:	 * - spread,      the number of distinct id_document where the id_entity appears	 * - avg_relevance, the average relevance of entity usage into the whole corpus	 * - min_relevance and max_relevance	 * 	 * @param antaUser	- a valid database user with an anta database	 * @param orders	- array, optional, where values are "field DIR" strings	 * */	public static function getEntities( Application_Model_User $antaUser, array $orders = array(), $offset=0, $limit=100, $search="" ){		// filter the order values		if( empty( $orders ) ) $orders = array ("spread DESC", "avg_relevance ASC" );				// evaluate query		$searchQuery =  empty( $search )? '': "WHERE content LIKE '%".mysql_escape_string( $search )."%'";						$stmt = Anta_Core::mysqli()->query( "			SELECT  SQL_CALC_FOUND_ROWS *, FROM anta_".$antaUser->username.".`ngr_entities`		");					}		public static function add( Application_Model_User $antaUser, $content, $service  ){				// generate sign from content		$sign = Anta_Utils_Fuzzy::generateSignature( $content );				$stmt = Anta_Core::mysqli()->query( "			INSERT IGNORE INTO  anta_".$antaUser->username.".`ngr_entities` (				`content`, `sign`,   `service`			) VALUES (				LOWER( ? ), LOWER( ? ), ?			)", array( $content, $sign,  $service )		);				$id = Anta_Core::mysqli()->lastInsertId( "anta_".$antaUser->username.".`ngr_entities`" );				if ( $id != 0 ) return $id;				$id = self::getId( $antaUser, $content, $service );						return $id;		}				public static function getId( Application_Model_User $antaUser, $content, $service ){				$stmt = Anta_Core::mysqli()->query( "			SELECT id_ngr_entity as id				FROM anta_".$antaUser->username.".`ngr_entities`			WHERE content = LOWER( ? ) and service = ?", array(				$content, $service		));				$row = $stmt->fetchObject();				if( $row == null ) return 0;				return $row->id;	}}?>