<?phpclass Application_Model_Ngr_EntitiesDocumentsMapper{	public static function install( $username ){			$stmt = Anta_Core::mysqli()->query( 			"CREATE TABLE IF NOT EXISTS anta_".$username.".`ngr_entities_documents` (				`id_ngr_entity` int(11) NOT NULL,				`id_document` int(11) NOT NULL,				`relevance` float NOT NULL COMMENT 'the relevance score for the relationship entity-document',				`frequency` int(11) NOT NULL DEFAULT '0' COMMENT 'number of such entities found into doc',  				UNIQUE KEY `id_ngr_entity` (`id_ngr_entity`,`id_document`),				KEY `relevance` (`relevance`),				FOREIGN KEY ( `id_ngr_entity` ) REFERENCES anta_".$username.".`ngr_entities`( id_ngr_entity )                      ON DELETE CASCADE,				FOREIGN KEY ( `id_document` ) REFERENCES anta_".$username.".`documents`( id_document )                      ON DELETE CASCADE	  			) ENGINE=INNODB"        );			}		public static function modify( Application_Model_User $antaUser, $idEntity, $idDocument, $relevance ){				$stmt = Anta_Core::mysqli()->query( "			UPDATE anta_".$antaUser->username.".`ngr_entities_documents` SET relevance = ( relevance + ? )/2 WHERE id_ngr_entity = ? AND id_document = ?",			array( $relevance,  $idEntity, $idDocument )		);				return $stmt->rowCount();			}		public static function add( Application_Model_User $antaUser, $idEntity, $idDocument, $relevance ){				$stmt = Anta_Core::mysqli()->query( 			"INSERT IGNORE INTO anta_".$antaUser->username.".`ngr_entities_documents` (				`id_ngr_entity`, `id_document`,`relevance`			) VALUES (				?, ?, ?			)", array( $idEntity, $idDocument, $relevance )		);				$added = $stmt->rowCount();				if( $added == 0 ){			self::modify( $antaUser, $idEntity, $idDocument, $relevance );		}				return $stmt->rowCount();	}		public static function remove( Application_Model_User $antaUser, $idEntity, $idDocument ){				$stmt = Anta_Core::mysqli()->query( 			"DELETE FROM anta_".$antaUser->username.".`ngr_entities_documents` WHERE id_ngr_entity = ? AND id_document = ?",			array(				$idEntity, $idDocument			)		);				return $stmt->rowCount();	}	}?>