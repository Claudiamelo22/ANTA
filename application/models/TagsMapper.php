<?phpclass Application_Model_TagsMapper{	public static function install( $username ){		$stmt = Anta_Core::mysqli()->query( 			"CREATE TABLE IF NOT EXISTS anta_".$username.".`tags` (				`id_tag` int(11) NOT NULL AUTO_INCREMENT,				`content` varchar(255) NOT NULL,				`id_category` int(11) NOT NULL,				`parent_id_tag` int(11) NOT NULL DEFAULT '0',				PRIMARY KEY (`id_tag`),				UNIQUE KEY `tag` (`content`,`id_category`),				FOREIGN KEY ( `id_category` ) REFERENCES anta_".$username.".`categories`( id_category )                      ON DELETE CASCADE			) ENGINE=INNODB  DEFAULT CHARSET=utf8"		);			}		public static function delete(  Application_Model_User $antaUser, $idTag ){		$stmt = Anta_Core::mysqli()->query( 			"DELETE FROM anta_{$antaUser->username}.tags WHERE id_tag = ?", array( $idTag )		);		return $stmt->rowCount();	}		public static function getTag( Application_Model_User $antaUser, $idTag ){		$stmt = Anta_Core::mysqli()->query( 			"SELECT id_tag, ca.content	as category, ta.content, parent_id_tag FROM anta_{$antaUser->username}.`tags` ta				INNER JOIN anta_{$antaUser->username}.categories ca USING( id_category )				WHERE id_tag = ?			", array( $idTag )		);				$row = $stmt->fetchObject();		if( $row == null ) return null;		return new Application_Model_Tag( $row->id_tag, $row->content, $row->category, $row->parent_id_tag );			}		public static function add( Application_Model_User $antaUser, $content, $category, $pidTag = 0 ){		// get category id		$idCategory = Application_Model_CategoriesMapper::add( $antaUser, $category );		$stmt = Anta_Core::mysqli()->query(			"INSERT IGNORE INTO anta_".$antaUser->username.".`tags` (				`content`, `id_category`, `parent_id_tag`			) SELECT 				?, id_category, ? FROM anta_".$antaUser->username.".categories WHERE categories.id_category = ? LIMIT 1			", array( $content, $pidTag, $idCategory )		);				$insertedId =  Anta_Core::mysqli()->lastInsertId( "anta_".$antaUser->username.".`tags`" );				// return the valus		if( $insertedId == 0 ){			return self::getId( $antaUser, $content, $category );		}		return $insertedId;	}		public static function suggest(  Application_Model_User $antaUser, $content ){		$stmt = Anta_Core::mysqli()->query( 			"SELECT id_tag, ca.content	as category, ta.content, parent_id_tag FROM anta_{$antaUser->username}.`tags` ta, anta_{$antaUser->username}.categories ca				WHERE ta.`id_category` = ca.`id_category` AND ta.content LIKE ? LIMIT 13 ", array( "%".$content."%" )		);						$results = array();		while( $row = $stmt->fetchObject() ){			$results[] =  (object) array( "id"=>$row->id_tag, "content" => $row->content, "category" => $row->category );		}		return $results;				}		public static function getId( Application_Model_User $antaUser, $content, $category ){				$stmt = Anta_Core::mysqli()->query( 			"SELECT id_tag FROM anta_".$antaUser->username.".`tags` ta				WHERE `id_category` IN ( 					SELECT id_category FROM anta_".$antaUser->username.".`categories` cat					WHERE cat.content = ?				) AND ta.content = ?			", array( $category, $content )		);				$row = $stmt->fetchObject();		if( $row == null ) return 0;		return $row->id_tag;	}	}?>